<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="utf-8">
  <title>Urban Street Canyon</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <link rel="stylesheet" href="3d.css">
  <link rel="stylesheet" href="https://unpkg.com/maplibre-gl@5.7.1/dist/maplibre-gl.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Kanit:400,700&display=swap" rel="stylesheet">
  <style>
    body,
    body,
    html {
      margin: 0;
      padding: 0;
      height: 100%;
      box-sizing: border-box;
    }

    /* เนื่องจาก Navbar และ Legend เป็น fixed position แล้ว ไม่ต้องใช้ padding-top ที่นี่ */
    /* สามารถลบโค้ด padding-top ได้เลย */

    #map {
      width: 100vw;
      height: 100vh;
    }

    #legend {
      position: fixed;
      /* เปลี่ยนเป็น fixed เพื่อให้ลอยอยู่บนแผนที่เสมอ */
      bottom: 30px;
      left: 10px;
      z-index: 1000;
      /* ... */
    }
  </style>
</head>

<body>

  <nav class="navbar">
    <ul class="navbar-links">
      <li><a href="index.html">Home</a></li>
      <li><a href="boxplot.html">ANOVA</a></li>
      <li><a href="confusion.html">Tukey HSD</a></li>
    </ul>
  </nav>

  <div id="map"></div>

  <div id="chartOverlay" style="display:none; position:fixed; left:0; top:0; width:100vw; height:100vh;
  background:#f8fbfe; z-index:5000; overflow:auto;">
    <nav
      style="background:#fffdfc;border-bottom:1.5px solid #e5eff7;height:70px;display:flex;align-items:center;justify-content:space-between;padding:0 2vw;">
      <div style="display:flex;align-items:center;">
        <button id="chartOverlayBack"
          style="background:none;border:none;font-size:1.8em;margin-right:18px;cursor:pointer;padding:0 6px;">&#8592;</button>
        <span style="color:#1672c6;font-size:2em;font-weight:700;font-family:'Kanit',sans-serif">Air Data</span>
        <span style="color:#a6aec9;font-size:1.35em;margin-left:12px;">| &nbsp;<span id="overlayLocation"></span></span>
      </div>
    </nav>
    <div style="padding:32px 4vw 16px 4vw;max-width:100vw;">
      <div style="
      background:#fff;
      border-radius:19px;
      padding:32px 32px 94px 32px;
      max-width:1100px;
      margin:25px auto 0 auto;
      box-shadow:0 6px 12px #d2e0f7;
      height:502px;
      display:flex;
      flex-direction:column;">
        <h2 id="overlayTitle" style="color:#1672c6;margin-bottom:32px;"></h2>
        <!-- เปลี่ยนจาก canvas เป็น div สำหรับ ECharts -->
        <div id="overlayChart" style="width:100%; height:330px;"></div>
      </div>
    </div>
  </div>


  <div id="legend" style="
    position:absolute; bottom:30px; left:10px;
    background:white; padding:10px 14px;
    border-radius:6px; font-family:'Kanit',sans-serif; font-size:14px;
    box-shadow:0 2px 8px rgba(0,0,0,0.2); z-index:10;">
    <b>Legend</b><br>
    <i
      style="background:#00FF00;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    Non canyon<br>
    <i
      style="background:#66FF00;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    On viaduct<br>
    <i
      style="background:#CCFF00;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    Under viaduct<br>
    <i
      style="background:#FFFF00;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    0&lt;H/W&lt;1<br>
    <i
      style="background:#FFCC00;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    1&lt;H/W&lt;2<br>
    <i
      style="background:#Ff6600;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    2&lt;H/W&lt;4<br>
    <i
      style="background:#FF0000;width:18px;height:18px;display:inline-block;margin-right:6px;border:1px solid #ccc;"></i>
    H/W&gt;4<br>

  </div>

  <script src="https://unpkg.com/maplibre-gl@5.7.1/dist/maplibre-gl.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>
  <script>
    function escapeHtml(text) { if (!text) return text; return text.replace(/</g, "&lt;"); }

    function showChartOverlay(p) {
      let weeks = [], pm25 = [], pm10 = [];
      for (let w = 1; w <= 22; w++) {
        weeks.push("Week " + w);
        pm25.push(Number(p['PM25_Week' + w]) || null);
        pm10.push(Number(p['PM10_Week' + w]) || null);
      }
      document.getElementById('overlayLocation').innerText = `Lat: ${p.latitude || '-'}, Lng: ${p.longitude || '-'}`;
      document.getElementById('overlayTitle').innerHTML = `${escapeHtml(p.label) || 'No label'} | Conf: ${p.conf || '-'}`;
      document.getElementById('chartOverlay').style.display = 'block';

      // สร้างกราฟ ECharts
      const chartDom = document.getElementById('overlayChart');
      const myChart = echarts.init(chartDom);

      const option = {
        tooltip: { trigger: 'axis' },
        legend: { data: ['PM2.5', 'PM10'], bottom: 0 },
        grid: { top: 40, left: 50, right: 30, bottom: 50 },
        xAxis: { type: 'category', data: weeks },
        yAxis: { type: 'value', name: 'ค่าฝุ่น (µg/m³)' },
        series: [
          {
            name: 'PM2.5',
            type: 'line',
            data: pm25,
            smooth: true,
            symbolSize: 6,
            lineStyle: { width: 3, color: '#1976d2' },
            itemStyle: { color: '#1976d2' }
          },
          {
            name: 'PM10',
            type: 'line',
            data: pm10,
            smooth: true,
            symbolSize: 6,
            lineStyle: { width: 3, color: '#f39c12' },
            itemStyle: { color: '#f39c12' }
          }
        ]
      };

      myChart.setOption(option);
    }

    document.getElementById('chartOverlayBack').onclick = function () {
      document.getElementById('chartOverlay').style.display = 'none';
    };

    const map = new maplibregl.Map({
      container: 'map',
      style: 'https://tiles.openfreemap.org/styles/bright',
      center: [98.979094, 18.795185],
      zoom: 17,
      pitch: 45,
      bearing: -17.6,
      antialias: true
    });

    async function predictFromStreetView(url) {
      const res = await fetch("http://localhost:8000/predict_url", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ url })
      });
      const data = await res.json();
      console.log("Predictions:", data.boxes);
      document.getElementById("result").src = data.annotated_image_base64;
    }


    map.on('load', () => {
      map.addSource('openfreemap', { url: 'https://tiles.openfreemap.org/planet', type: 'vector' });
      map.addLayer({
        'id': '3d-buildings',
        'source': 'openfreemap',
        'source-layer': 'building',
        'type': 'fill-extrusion',
        'minzoom': 15,
        'paint': {
          'fill-extrusion-color': [
            'interpolate', ['linear'], ['get', 'render_height'],
            0, 'lightgray', 20, '#a1dab4', 50, '#41b6c4', 100, '#2c7fb8', 200, '#253494'
          ],
          'fill-extrusion-height': ['interpolate', ['linear'], ['zoom'], 15, 0, 16, ['get', 'render_height']],
          'fill-extrusion-base': ['case', ['>=', ['get', 'zoom'], 16], ['get', 'render_min_height'], 0],
          'fill-extrusion-opacity': 0.9
        }
      });

      map.addSource('pollution-points', { type: 'geojson', data: 'label_and_pollution.geojson' });
      map.addLayer({
        id: 'pollution-3d',
        type: 'circle',
        source: 'pollution-points',
        paint: {
          // 'circle-radius':['interpolate',['linear'],['get','PM25'],0,2,50,6,100,12],
          'circle-color': ['match', ['get', 'label'],
            'Non canyon', '#00FF00',
            '0<H/W<1', '#FFFF00',
            '1<H/W<2', '#FFCC00',
            '2<H/W<4', '#Ff6600',
            'H/W>4', '#FF0000',
            'On viaduct', '#66FF00',
            'Under viaduct', '#CCFF00',
            '#3498db'],
          'circle-opacity': 0.85,
          'circle-stroke-color': '#fff',
          'circle-stroke-width': 0
        }
      });

      map.on('click', 'pollution-3d', async (e) => {
        try {
          const p = e.features[0].properties;
          const coordinates = e.features[0].geometry.coordinates;

          // Build the local image path
          // const localImagePath = `./images/img_0_18.79973687_98.94342659_Q-39Rh6PhvVlJSwEavCMBw_202011.jpg`
          const localImagePath = `/images/img_${p.id}_${p.latitude}_${p.longitude}_${p.pano_id}_${p.date}.jpg`;

          // Create an Image object to wait for it to load
          const img = new Image();
          img.src = localImagePath;

          img.onload = () => {
            // Once the image is loaded, create popup content
            const popupContent = `
        <div style="min-width:220px;max-width:330px;">
          <div style="background:#1976d2;color:#fff;padding:9px 16px;border-radius:8px 8px 0 0;font-size:1.1em;">
            <b>รายละเอียด</b>
          </div>
          <div style="background:#fff;padding:13px 16px;border-radius:0 0 8px 8px;box-shadow:0 2px 7px #e5e7ef;">
            <div><b>Latitude:</b> ${p.latitude || '-'}</div>
            <div><b>Longitude:</b> ${p.longitude || '-'}</div>
            <hr>
            <div><b>Label:</b> ${escapeHtml(p.label) || '-'}</div>
            <div><b>Conf:</b> ${p.conf || '-'}</div>

            <img src="${localImagePath}"
                 alt="H/W Ratio"
                 style="width:100%;margin-top:8px;border-radius:6px;box-shadow:0 2px 6px #ccc;object-fit:cover;">

            <hr>
            <button id="showFullChartBtn"
                    style="margin-top:12px;width:100%;background:#22b28a;color:#fff;border:none;border-radius:6px;padding:9px 0;cursor:pointer;font-size:1.05em;">
              <b>Show Air Data</b>
            </button>
          </div>
        </div>
      `;

            const popup = new maplibregl.Popup({ offset: 25 })
              .setLngLat(coordinates)
              .setHTML(popupContent)
              .addTo(map);

            // Attach button click handler
            const btn = document.getElementById("showFullChartBtn");
            if (btn) {
              btn.onclick = () => showChartOverlay(p);
            }
          };

          img.onerror = () => {
            console.error('Image failed to load:', localImagePath);
          };

        } catch (error) {
          console.error('Error handling click event:', error);
        }
      });


      console.log(e.features);
      const popup = new maplibregl.Popup({ offset: 25 })
        .setLngLat(e.features[0].geometry.coordinates)
        .setHTML(popupContent)
        .addTo(map);
      setTimeout(() => {
        const btn = document.getElementById("showFullChartBtn");
        if (btn) btn.onclick = function () { showChartOverlay(p); };
      }, 100);
    });

  </script>
</body>

</html>